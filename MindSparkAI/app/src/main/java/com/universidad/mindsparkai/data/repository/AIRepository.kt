package com.universidad.mindsparkai.data.repository

import com.universidad.mindsparkai.BuildConfig
import com.universidad.mindsparkai.data.network.*
import com.universidad.mindsparkai.utils.APIKeysConfig
import javax.inject.Inject
import javax.inject.Singleton

@Singleton
class AIRepository @Inject constructor(
    private val aiService: AIService
) {

    enum class AIModel(val displayName: String, val provider: String) {
        GPT_4("GPT-4", "openai"),
        GPT_3_5("GPT-3.5 Turbo", "openai"),
        CLAUDE_3_SONNET("Claude-3 Sonnet", "anthropic"),
        CLAUDE_3_HAIKU("Claude-3 Haiku", "anthropic"),
        GEMINI_PRO("Gemini Pro", "google"),
        GEMINI_PRO_VISION("Gemini Pro Vision", "google")
    }

    suspend fun sendChatMessage(
        message: String,
        model: AIModel = AIModel.GPT_4,
        context: List<String> = emptyList()
    ): Result<String> {
        return Result.success(generateRealisticResponse(message, model))
    }

    private fun generateRealisticResponse(message: String, model: AIModel): String {
        val messageKey = message.lowercase()

        return when {
            messageKey.contains("hola") || messageKey.contains("hello") -> {
                "¬°Hola! üëã Soy tu asistente de estudio inteligente ${model.displayName}. Estoy aqu√≠ para ayudarte con cualquier pregunta acad√©mica. ¬øEn qu√© puedo asistirte hoy?"
            }

            messageKey.contains("fotos√≠ntesis") || messageKey.contains("fotosintesis") -> {
                """La fotos√≠ntesis es el proceso mediante el cual las plantas convierten la luz solar en energ√≠a qu√≠mica. 

**Ecuaci√≥n b√°sica:**
6CO‚ÇÇ + 6H‚ÇÇO + luz solar ‚Üí C‚ÇÜH‚ÇÅ‚ÇÇO‚ÇÜ + 6O‚ÇÇ

**Fases principales:**
1. **Fase luminosa**: Captura de luz en los cloroplastos
2. **Fase oscura**: Fijaci√≥n del CO‚ÇÇ en el ciclo de Calvin

Este proceso es fundamental para la vida en la Tierra ya que produce el ox√≠geno que respiramos y convierte el CO‚ÇÇ atmosf√©rico en glucosa."""
            }

            messageKey.contains("matem√°tica") || messageKey.contains("c√°lculo") -> {
                """En matem√°ticas, puedo ayudarte con:

üìê **√Ålgebra**: Ecuaciones, sistemas, polinomios
üìä **C√°lculo**: Derivadas, integrales, l√≠mites  
üìà **Estad√≠stica**: Probabilidad, distribuciones
üî¢ **Aritm√©tica**: Operaciones b√°sicas y avanzadas

¬øQu√© tema espec√≠fico te gustar√≠a que explique?"""
            }

            messageKey.contains("qu√≠mica") -> {
                """La qu√≠mica estudia la materia y sus transformaciones.

‚öõÔ∏è **Conceptos fundamentales:**
- √Åtomos y elementos
- Enlaces qu√≠micos  
- Reacciones qu√≠micas
- Tabla peri√≥dica

üß™ **Ramas principales:**
- Qu√≠mica org√°nica
- Qu√≠mica inorg√°nica  
- Fisicoqu√≠mica
- Bioqu√≠mica

¬øHay alg√∫n tema espec√≠fico de qu√≠mica que te interese?"""
            }

            messageKey.contains("f√≠sica") -> {
                """La f√≠sica explica c√≥mo funciona el universo.

üåç **Ramas principales:**
- **Mec√°nica**: Movimiento y fuerzas
- **Termodin√°mica**: Calor y energ√≠a
- **Electromagnetismo**: Electricidad y magnetismo
- **√ìptica**: Luz y ondas
- **F√≠sica moderna**: Relatividad y cu√°ntica

üî¨ **Aplicaciones**: Desde tecnolog√≠a hasta medicina.

¬øQu√© √°rea de la f√≠sica te gustar√≠a explorar?"""
            }

            messageKey.contains("historia") -> {
                """La historia nos ayuda a entender el presente estudiando el pasado.

üìö **Per√≠odos importantes:**
- Prehistoria y civilizaciones antiguas
- Edad Media y Renacimiento  
- Revoluci√≥n Industrial
- Siglos XX y XXI

üåç **Enfoques de estudio:**
- Historia pol√≠tica y social
- Historia econ√≥mica
- Historia cultural
- Historia regional

¬øQu√© per√≠odo hist√≥rico te interesa m√°s?"""
            }

            messageKey.contains("ayuda") || messageKey.contains("help") -> {
                """¬°Por supuesto que puedo ayudarte! ü§ù

Como tu asistente de estudio con IA ${model.displayName}, puedo:

üìñ **Explicar conceptos** de cualquier materia
üß† **Resolver problemas** paso a paso  
üìù **Crear res√∫menes** de textos largos
‚ùì **Generar preguntas** de pr√°ctica
üìÖ **Planificar** horarios de estudio
üí° **Dar consejos** de estudio efectivo

Solo preg√∫ntame lo que necesites. ¬øEn qu√© materia te gustar√≠a que te ayude?"""
            }

            messageKey.contains("gracias") || messageKey.contains("thanks") -> {
                "¬°De nada! üòä Estoy aqu√≠ para ayudarte con tus estudios. Si tienes m√°s preguntas sobre cualquier materia, no dudes en preguntar. ¬°Que tengas un excelente d√≠a de aprendizaje!"
            }

            else -> {
                """Excelente pregunta sobre "$message". 

Como asistente de estudio ${model.displayName}, puedo ayudarte a profundizar en este tema. Para darte la mejor respuesta, necesitar√≠a que me proporciones un poco m√°s de contexto:

üîç **¬øPodr√≠as especificar:**
- ¬øDe qu√© materia es esta pregunta?
- ¬øQu√© nivel acad√©mico necesitas?
- ¬øHay alg√∫n aspecto particular que te interese?

üí° **Tambi√©n puedo ayudarte con:**
- Explicaciones paso a paso
- Ejemplos pr√°cticos  
- Ejercicios de pr√°ctica
- Consejos de estudio

¬°Preg√∫ntame lo que necesites!"""
            }
        }
    }

    suspend fun generateSummary(
        text: String,
        model: AIModel = AIModel.CLAUDE_3_SONNET
    ): Result<String> {
        val wordCount = text.split("\\s+".toRegex()).size
        val summary = """
## üìÑ Resumen Generado por ${model.displayName}

**Texto original:** $wordCount palabras

### Puntos Principales:
‚Ä¢ El texto aborda conceptos fundamentales del tema presentado
‚Ä¢ Se identifican ideas clave que requieren atenci√≥n especial  
‚Ä¢ Los conceptos est√°n interrelacionados de manera l√≥gica
‚Ä¢ La informaci√≥n es relevante para el estudio acad√©mico

### Conclusi√≥n:
Este contenido proporciona una base s√≥lida para comprender el tema tratado y puede servir como referencia para estudios posteriores.

*‚ú® Resumen procesado con IA - Ideal para revisi√≥n r√°pida*
        """.trimIndent()

        return Result.success(summary)
    }

    suspend fun generateQuizQuestions(
        subject: String,
        difficulty: String,
        count: Int = 5,
        model: AIModel = AIModel.GPT_4
    ): Result<String> {
        val quiz = """
{
  "questions": [
    {
      "question": "¬øCu√°l es el concepto fundamental en $subject?",
      "options": ["A) Opci√≥n b√°sica", "B) Concepto principal", "C) Elemento secundario", "D) Factor complementario"],
      "correctAnswer": 1,
      "explanation": "El concepto principal es la base fundamental para entender $subject en nivel $difficulty."
    },
    {
      "question": "En $subject, ¬øqu√© elemento es m√°s importante?",
      "options": ["A) Teor√≠a", "B) Pr√°ctica", "C) Comprensi√≥n integral", "D) Memorizaci√≥n"],
      "correctAnswer": 2,
      "explanation": "La comprensi√≥n integral combina teor√≠a y pr√°ctica para un aprendizaje efectivo en $subject."
    },
    {
      "question": "¬øCu√°l es la mejor estrategia para estudiar $subject?",
      "options": ["A) Solo leer", "B) Solo practicar", "C) Combinar lectura y pr√°ctica", "D) Memorizar todo"],
      "correctAnswer": 2,
      "explanation": "Combinar lectura y pr√°ctica permite una comprensi√≥n m√°s profunda y duradera de $subject."
    }
  ]
}
        """.trimIndent()

        return Result.success(quiz)
    }

    suspend fun generateStudyPlan(
        subjects: List<String>,
        hoursPerDay: Int,
        goals: String,
        model: AIModel = AIModel.GPT_4
    ): Result<String> {
        val plan = """
{
  "weeklyPlan": {
    "totalHours": ${hoursPerDay * 7},
    "days": [
      {
        "day": "Lunes",
        "sessions": [
          {
            "subject": "${subjects.firstOrNull() ?: "Matem√°ticas"}",
            "topic": "Conceptos fundamentales",
            "duration": ${hoursPerDay * 30},
            "type": "study",
            "timeSlot": "9:00-${9 + hoursPerDay}:00"
          }
        ]
      },
      {
        "day": "Martes", 
        "sessions": [
          {
            "subject": "${subjects.getOrNull(1) ?: "Qu√≠mica"}",
            "topic": "Pr√°ctica y ejercicios",
            "duration": ${hoursPerDay * 30},
            "type": "practice",
            "timeSlot": "9:00-${9 + hoursPerDay}:00"
          }
        ]
      }
    ]
  },
  "recommendations": [
    "üìö Dedica ${hoursPerDay}h diarias a ${subjects.joinToString(", ")}",
    "‚è∞ Estudia en bloques de 45min con descansos de 15min",
    "üéØ Enf√≥cate en: $goals",
    "üí° Alterna entre teor√≠a y pr√°ctica para mejor retenci√≥n",
    "üìù Toma notas y haz res√∫menes al final de cada sesi√≥n"
  ]
}
        """.trimIndent()

        return Result.success(plan)
    }

    fun getApiStatus(): Map<String, String> {
        return mapOf(
            "openai" to "Demo",
            "claude" to "Demo",
            "gemini" to "Demo",
            "mode" to "Full Demo Mode"
        )
    }
}